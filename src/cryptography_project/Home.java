/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cryptography_project;

import static cryptography_project.AESProject.hex;
import static cryptography_project.AESProject.hexToByte;
import static cryptography_project.AESProject.hexToByte2;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author USER
 */
public class Home extends javax.swing.JFrame {

    private ArrayList<byte[][]> cipherArray;
    private String subkey;
    private int subkeys[];
    private final int subkeySize = 16 * 2;
    private int keySize = 128;
    private int totalRounds = 10;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        messageTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCounter();
            }

            public void updateCounter() {
                messageCounterLabel.setText(messageTextField.getText().trim().length() + " characters");
            }
        });

        keyTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCounter();
            }

            public void updateCounter() {
                keyCounterLabel.setText(keyTextField.getText().trim().length() + " characters");
            }
        });

        cipherTextField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCounter();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCounter();
            }

            public void updateCounter() {
                cipherCounterLabel.setText(cipherTextField.getText().trim().length() + " characters");
            }
        });

        keySizeCombo.addActionListener((ActionEvent e) -> {
            keySize = Integer.parseInt((String) keySizeCombo.getSelectedItem());
            switch (keySize) {
                case 128:
                    totalRounds = 10;
                    break;
                case 192:
                    totalRounds = 12;
                    break;
                case 256:
                    totalRounds = 14;
                    break;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        roundTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        proceedButton = new javax.swing.JButton();
        S01 = new javax.swing.JTextField();
        S00 = new javax.swing.JTextField();
        S02 = new javax.swing.JTextField();
        S03 = new javax.swing.JTextField();
        S10 = new javax.swing.JTextField();
        S11 = new javax.swing.JTextField();
        S12 = new javax.swing.JTextField();
        S13 = new javax.swing.JTextField();
        S30 = new javax.swing.JTextField();
        S32 = new javax.swing.JTextField();
        S33 = new javax.swing.JTextField();
        S31 = new javax.swing.JTextField();
        S20 = new javax.swing.JTextField();
        S21 = new javax.swing.JTextField();
        S22 = new javax.swing.JTextField();
        S23 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        K00 = new javax.swing.JTextField();
        K01 = new javax.swing.JTextField();
        K02 = new javax.swing.JTextField();
        K03 = new javax.swing.JTextField();
        K13 = new javax.swing.JTextField();
        K12 = new javax.swing.JTextField();
        K11 = new javax.swing.JTextField();
        K10 = new javax.swing.JTextField();
        K20 = new javax.swing.JTextField();
        K21 = new javax.swing.JTextField();
        K22 = new javax.swing.JTextField();
        K23 = new javax.swing.JTextField();
        K33 = new javax.swing.JTextField();
        K32 = new javax.swing.JTextField();
        K31 = new javax.swing.JTextField();
        K30 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cipherTextField = new javax.swing.JTextField();
        decryptButton = new javax.swing.JButton();
        cipherWarningLabel = new javax.swing.JLabel();
        cipherCounterLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        messageTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        keyTextField = new javax.swing.JTextField();
        keySizeCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        randomButton = new javax.swing.JButton();
        keyWarningLabel = new javax.swing.JLabel();
        messageWarningLabel = new javax.swing.JLabel();
        messageCounterLabel = new javax.swing.JLabel();
        keyCounterLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setName("Output"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("Output");

        roundTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter a round:");

        proceedButton.setText("Proceed");
        proceedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedButtonActionPerformed(evt);
            }
        });

        S01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S01ActionPerformed(evt);
            }
        });

        S00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S00ActionPerformed(evt);
            }
        });

        S02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S02ActionPerformed(evt);
            }
        });

        S03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S03ActionPerformed(evt);
            }
        });

        S10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S10ActionPerformed(evt);
            }
        });

        S11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S11ActionPerformed(evt);
            }
        });

        S12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S12ActionPerformed(evt);
            }
        });

        S13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S13ActionPerformed(evt);
            }
        });

        S30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S30ActionPerformed(evt);
            }
        });

        S32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S32ActionPerformed(evt);
            }
        });

        S33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S33ActionPerformed(evt);
            }
        });

        S31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S31ActionPerformed(evt);
            }
        });

        S20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S20ActionPerformed(evt);
            }
        });

        S21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S21ActionPerformed(evt);
            }
        });

        S22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S22ActionPerformed(evt);
            }
        });

        S23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                S23ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("State");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Sub Key");

        K00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K00ActionPerformed(evt);
            }
        });

        K01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K01ActionPerformed(evt);
            }
        });

        K02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K02ActionPerformed(evt);
            }
        });

        K03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K03ActionPerformed(evt);
            }
        });

        K13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K13ActionPerformed(evt);
            }
        });

        K12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K12ActionPerformed(evt);
            }
        });

        K11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K11ActionPerformed(evt);
            }
        });

        K10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K10ActionPerformed(evt);
            }
        });

        K20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K20ActionPerformed(evt);
            }
        });

        K21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K21ActionPerformed(evt);
            }
        });

        K22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K22ActionPerformed(evt);
            }
        });

        K23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K23ActionPerformed(evt);
            }
        });

        K33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K33ActionPerformed(evt);
            }
        });

        K32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K32ActionPerformed(evt);
            }
        });

        K31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K31ActionPerformed(evt);
            }
        });

        K30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                K30ActionPerformed(evt);
            }
        });

        jLabel9.setText("Ciphertext:");

        cipherTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cipherTextFieldActionPerformed(evt);
            }
        });

        decryptButton.setText("Decrypt");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        cipherWarningLabel.setForeground(new java.awt.Color(255, 51, 51));
        cipherWarningLabel.setText("              ");

        cipherCounterLabel.setText("              ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(160, 160, 160)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(roundTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cipherWarningLabel)
                                    .addComponent(cipherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(proceedButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cipherCounterLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(decryptButton))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(S30, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(S20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(S10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(S00, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(S03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(101, 101, 101)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(K30, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K31, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K33, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(K20, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K21, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(K10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(K00, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(K03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roundTextField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(proceedButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cipherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(decryptButton)
                    .addComponent(cipherCounterLabel))
                .addGap(11, 11, 11)
                .addComponent(cipherWarningLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S01, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S00, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S02, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S03, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S11, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S10, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S12, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S13, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S21, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S20, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S22, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S23, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(S31, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S30, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S32, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(S33, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(K01, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K00, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K02, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K03, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(K11, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K10, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K12, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K13, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(K21, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K20, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K22, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K23, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(K31, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K30, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K32, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(K33, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))))
                .addGap(19, 19, 19))
        );

        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Encrypt");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        keyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyTextFieldActionPerformed(evt);
            }
        });

        keySizeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "128", "192", "256" }));

        jLabel3.setText("Enter a key size:");

        jLabel5.setText("Enter a key: ");

        jLabel1.setText("Enter a message:");

        randomButton.setText("Random");
        randomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                randomButtonActionPerformed(evt);
            }
        });

        keyWarningLabel.setForeground(new java.awt.Color(255, 51, 51));
        keyWarningLabel.setText("              ");

        messageWarningLabel.setForeground(new java.awt.Color(255, 51, 51));
        messageWarningLabel.setText("              ");

        messageCounterLabel.setText("              ");

        keyCounterLabel.setText("              ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(keyWarningLabel)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(keyCounterLabel)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                        .addGap(39, 39, 39)
                                        .addComponent(keySizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(252, 252, 252))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(messageWarningLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(messageCounterLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(randomButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(messageCounterLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(randomButton)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(17, 17, 17))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(messageWarningLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(keySizeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(keyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyCounterLabel))
                .addGap(12, 12, 12)
                .addComponent(keyWarningLabel)
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Input");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void displayCipher(int round) {
        String cipher = hex(this.cipherArray.get(round));
        S00.setText(cipher.charAt(0) + "" + cipher.charAt(1));
        S10.setText(cipher.charAt(2) + "" + cipher.charAt(3));
        S20.setText(cipher.charAt(4) + "" + cipher.charAt(5));
        S30.setText(cipher.charAt(6) + "" + cipher.charAt(7));

        S01.setText(cipher.charAt(8) + "" + cipher.charAt(9));
        S11.setText(cipher.charAt(10) + "" + cipher.charAt(11));
        S21.setText(cipher.charAt(12) + "" + cipher.charAt(13));
        S31.setText(cipher.charAt(14) + "" + cipher.charAt(15));

        S02.setText(cipher.charAt(16) + "" + cipher.charAt(17));
        S12.setText(cipher.charAt(18) + "" + cipher.charAt(19));
        S22.setText(cipher.charAt(20) + "" + cipher.charAt(21));
        S32.setText(cipher.charAt(22) + "" + cipher.charAt(23));

        S03.setText(cipher.charAt(24) + "" + cipher.charAt(25));
        S13.setText(cipher.charAt(26) + "" + cipher.charAt(27));
        S23.setText(cipher.charAt(28) + "" + cipher.charAt(29));
        S33.setText(cipher.charAt(30) + "" + cipher.charAt(31));
    }

    public void displaySubKey(int round) {
        K00.setText(subkey.charAt(round * subkeySize + 0) + "" + subkey.charAt(round * subkeySize + 1));
        K10.setText(subkey.charAt(round * subkeySize + 2) + "" + subkey.charAt(round * subkeySize + 3));
        K20.setText(subkey.charAt(round * subkeySize + 4) + "" + subkey.charAt(round * subkeySize + 5));
        K30.setText(subkey.charAt(round * subkeySize + 6) + "" + subkey.charAt(round * subkeySize + 7));

        K01.setText(subkey.charAt(round * subkeySize + 8) + "" + subkey.charAt(round * subkeySize + 9));
        K11.setText(subkey.charAt(round * subkeySize + 10) + "" + subkey.charAt(round * subkeySize + 11));
        K21.setText(subkey.charAt(round * subkeySize + 12) + "" + subkey.charAt(round * subkeySize + 13));
        K31.setText(subkey.charAt(round * subkeySize + 14) + "" + subkey.charAt(round * subkeySize + 15));

        K02.setText(subkey.charAt(round * subkeySize + 16) + "" + subkey.charAt(round * subkeySize + 17));
        K12.setText(subkey.charAt(round * subkeySize + 18) + "" + subkey.charAt(round * subkeySize + 19));
        K22.setText(subkey.charAt(round * subkeySize + 20) + "" + subkey.charAt(round * subkeySize + 21));
        K32.setText(subkey.charAt(round * subkeySize + 22) + "" + subkey.charAt(round * subkeySize + 23));

        K03.setText(subkey.charAt(round * subkeySize + 24) + "" + subkey.charAt(round * subkeySize + 25));
        K13.setText(subkey.charAt(round * subkeySize + 26) + "" + subkey.charAt(round * subkeySize + 27));
        K23.setText(subkey.charAt(round * subkeySize + 28) + "" + subkey.charAt(round * subkeySize + 29));
        K33.setText(subkey.charAt(round * subkeySize + 30) + "" + subkey.charAt(round * subkeySize + 31));
    }

    private int getKey(AESAlgorithm aes) {
        String inputKey = keyTextField.getText().trim();
        if (inputKey.equals("")) {
            initializeKey();
            inputKey = keyTextField.getText().trim();
        } else if (inputKey.length() != keySize / 4) {
            keyWarningLabel.setText("Key must be " + keySize / 4 + " characters.");
            return 1;
        }
        keyWarningLabel.setText("   ");
        byte key[] = hexToByte2(inputKey, keySize / 8);
        this.subkeys = aes.createKeyExpansion(key);
        this.subkey = hex(subkeys);
        return 0;
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AESAlgorithm aes = new AESAlgorithm(keySize);
        if (getKey(aes) == 1) {
            return;
        }
        displaySubKey(this.totalRounds);
        String message = messageTextField.getText().trim();
        if (message.equals("")) {
            initializeMessage();
            message = messageTextField.getText().trim();
        } else if (message.length() != 32) {
            messageWarningLabel.setText("Message must be 32 characters.");
            return;
        }
        messageWarningLabel.setText("   ");
        byte bytes[][] = hexToByte(message);
        this.cipherArray = aes.cipher(bytes, subkeys);
        displayCipher(this.totalRounds);
        cipherTextField.setText(hex(this.cipherArray.get(this.totalRounds)));
        roundTextField.setText(this.totalRounds + "");
        cipherWarningLabel.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void roundTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roundTextFieldActionPerformed

    private void S01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S01ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S01ActionPerformed

    private void S00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S00ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S00ActionPerformed

    private void S02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S02ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S02ActionPerformed

    private void S03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S03ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S03ActionPerformed

    private void S10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S10ActionPerformed

    private void S11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S11ActionPerformed

    private void S12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S12ActionPerformed

    private void S13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S13ActionPerformed

    private void S30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S30ActionPerformed

    private void S32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S32ActionPerformed

    private void S33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S33ActionPerformed

    private void S31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S31ActionPerformed

    private void S20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S20ActionPerformed

    private void S21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S21ActionPerformed

    private void S22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S22ActionPerformed

    private void S23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_S23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_S23ActionPerformed

    private void K00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K00ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K00ActionPerformed

    private void K01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K01ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K01ActionPerformed

    private void K02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K02ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K02ActionPerformed

    private void K03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K03ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K03ActionPerformed

    private void K13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K13ActionPerformed

    private void K12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K12ActionPerformed

    private void K11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K11ActionPerformed

    private void K10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K10ActionPerformed

    private void K20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K20ActionPerformed

    private void K21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K21ActionPerformed

    private void K22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K22ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K22ActionPerformed

    private void K23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K23ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K23ActionPerformed

    private void K33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K33ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K33ActionPerformed

    private void K32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K32ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K32ActionPerformed

    private void K31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K31ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K31ActionPerformed

    private void K30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_K30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_K30ActionPerformed

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_messageTextFieldActionPerformed

    private void keyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_keyTextFieldActionPerformed

    private void proceedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedButtonActionPerformed
        // TODO add your handling code here:
        int round = Integer.parseInt(roundTextField.getText());
        if (round < 0) {
            roundTextField.setText("0");
            round = 0;
        }
        if (round > this.totalRounds) {
            roundTextField.setText(this.totalRounds + "");
            round = this.totalRounds;
        }
        displayCipher(round);
        displaySubKey(round);
        cipherWarningLabel.setText("    ");
        messageWarningLabel.setText("   ");
    }//GEN-LAST:event_proceedButtonActionPerformed

    public void initializeMessage() {
        byte bytesMessage[][] = {{(byte) 0x21, (byte) 0x7c, (byte) 0x12, (byte) 0x55},
        {(byte) 0x21, (byte) 0x7c, (byte) 0x12, (byte) 0x55},
        {(byte) 0x21, (byte) 0x7c, (byte) 0x12, (byte) 0x55},
        {(byte) 0x21, (byte) 0x7c, (byte) 0x12, (byte) 0x55}
        };

        messageTextField.setText(hex(bytesMessage));
    }

    public void initializeKey() {
        AESAlgorithm aes = new AESAlgorithm(keySize);
        byte key[] = aes.createKey();
        keyTextField.setText(hex(key));
        keyWarningLabel.setText("   ");
    }

    public void initialize() {
        initializeMessage();
        initializeKey();
    }

    private void randomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_randomButtonActionPerformed
        // TODO add your handling code here:
        initialize();
        cipherWarningLabel.setText("    ");
        messageWarningLabel.setText("   ");
        keyWarningLabel.setText("   ");
    }//GEN-LAST:event_randomButtonActionPerformed

    private void cipherTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cipherTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cipherTextFieldActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        // TODO add your handling code here:
        AESAlgorithm aes = new AESAlgorithm(keySize);
        keyWarningLabel.setText("   ");
        getKey(aes);
        String cipher = cipherTextField.getText().trim();
        messageWarningLabel.setText("   ");
        if (cipher.equals("")) {
            cipherTextField.setText("71415b0a2ec38267230d1a7ecfa1fecc");
            cipher = cipherTextField.getText().trim();
        } else if (cipher.length() != 32) {
            cipherWarningLabel.setText("Ciphertext must be 32 characters.");
            return;
        }
        cipherWarningLabel.setText("    ");
        ArrayList<byte[][]> b = aes.invCipher(hexToByte(cipher), subkeys);
        roundTextField.setText(this.totalRounds + "");
        messageTextField.setText(hex(b.get(this.totalRounds)));
    }//GEN-LAST:event_decryptButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField K00;
    private javax.swing.JTextField K01;
    private javax.swing.JTextField K02;
    private javax.swing.JTextField K03;
    private javax.swing.JTextField K10;
    private javax.swing.JTextField K11;
    private javax.swing.JTextField K12;
    private javax.swing.JTextField K13;
    private javax.swing.JTextField K20;
    private javax.swing.JTextField K21;
    private javax.swing.JTextField K22;
    private javax.swing.JTextField K23;
    private javax.swing.JTextField K30;
    private javax.swing.JTextField K31;
    private javax.swing.JTextField K32;
    private javax.swing.JTextField K33;
    private javax.swing.JTextField S00;
    private javax.swing.JTextField S01;
    private javax.swing.JTextField S02;
    private javax.swing.JTextField S03;
    private javax.swing.JTextField S10;
    private javax.swing.JTextField S11;
    private javax.swing.JTextField S12;
    private javax.swing.JTextField S13;
    private javax.swing.JTextField S20;
    private javax.swing.JTextField S21;
    private javax.swing.JTextField S22;
    private javax.swing.JTextField S23;
    private javax.swing.JTextField S30;
    private javax.swing.JTextField S31;
    private javax.swing.JTextField S32;
    private javax.swing.JTextField S33;
    private javax.swing.JLabel cipherCounterLabel;
    private javax.swing.JTextField cipherTextField;
    private javax.swing.JLabel cipherWarningLabel;
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel keyCounterLabel;
    private javax.swing.JComboBox<String> keySizeCombo;
    private javax.swing.JTextField keyTextField;
    private javax.swing.JLabel keyWarningLabel;
    private javax.swing.JLabel messageCounterLabel;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JLabel messageWarningLabel;
    private javax.swing.JButton proceedButton;
    private javax.swing.JButton randomButton;
    private javax.swing.JTextField roundTextField;
    // End of variables declaration//GEN-END:variables
}
